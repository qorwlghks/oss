7-1

1.오픈소스 소프트 웨어 개요
 오픈소스 소프트웨어
  -OSS:open source software 오픈소스
  -Open source Initiative(OSI)
  -의미
 자유 소프트웨어에서 출발한 OSS 
  -자유 소프트 웨어
  -자유 소프트 웨어에서 나온 오픈소스 소프트 웨어
 오픈소스 소프트웨어 장단점
   -소스코드를 공개
   -커스터마이징과 혁신 지원
  다양한 오픈소스 소프트웨어
   -빅데이터,인공지능 분야
   -다양한 오픈소스 개발모델
  2.오픈소스 소프트웨어 저작권
  오픈소스 소프트웨어 라이선스 종류
  - GNU General Public
  - MIT License
  - Apache
  - BSD
  - MySQL
  - SUSE
  - Ubuntu
  1)GPL
  2)AGPL
  3)LGPL
  4)Apache Linecense
  5)MIT Lincense

  7-2
1.깃 4영역과 임시 저장 개요
Git stash : 놓다 , 남겨두다 , 감추다 , 안전한 곳에 숨겨두다

커밋할 필요 없이 파일의 변경 사항을 숨기거나 비밀리에 저장할 수 있는 강력한 도구

- 작업 디렉토리와 스테이징 영역의 원래의 내용을 stash 스택에 저장
- 작업 디렉토리와 스테이징 영역의 값을 깃 저장소의 마지막 커밋 내용으로 복사

따로 안전한 곳에 저장했다가 다시 가져올 수 있는 기능

Stash 저장 구조

깃에서 임시저장소(스택 구조)에 저장

- Stack of git stashes
- 가장 최근의 내용이 가장 위에 저장되는 구조

Git stash 필요성

2.임시 저장 명령 stash
작업 폴더와 스테이징 영역을 stash에 저장하고 작업 폴더를 정리

- git stash
- git stash -m ‘메시지’
- git stash save
- git stash save ‘메시지’

옵션

- —keep -index , -k 스테이징 영역은 제외하고 작업 디렉토리더만 저장 ( 작업 디렉토리는 스테이징 영역의 내용으로 )
- —include -untracked , -u     Untracked 파일도 포함해 저장
특정 stash 확인

커밋 자료와 최신 stash 항목 간의 차이로 표시

- git stash show
- git stash show -p : (-p:  파일 내용의 차이까지 보이기)

커밋 자료와 해당 stash 항목 간의 차이로 표시

- git stash show stash@{n}
- git stash show stash@{n} -p : 내용의 차이까지 보이기

임시 저장된 stash 반영
